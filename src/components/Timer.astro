<div id="wrapper">
  <h1 id="hours"></h1>
  <h1 id="minutes"></h1>
  <h1 id="seconds"></h1>
</div>
<style>
  div {
    display: inline-grid;
    grid-template-columns: 1fr 0.8fr 1fr;
    gap: 10px;
    width: 40ch;
    margin: auto;
  }
  div.arrived {
    text-align: center;
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  h1 {
    font-weight: 600;
    font-variant-numeric: tabular-nums;
    font-size: var(--font-size-lg);
    text-align: center;
    grid-area: 1fr;
  }

  @media screen and (max-width: 550px) {
    div {
      grid-auto-flow: row;
      grid-template-columns: auto;
      grid-template-rows: 1fr 0.8fr 1fr;
      width: 20ch;
    }
  }
</style>
<script>
  import confetti from 'js-confetti';

  type HMS = {
    hDisplay: string;
    mDisplay: string;
    sDisplay: string;
  };

  function secondsToHms(timestamp: number): HMS {
    return {
      hDisplay:
        Math.floor(timestamp / 3600)
          .toString()
          .padStart(2, '0') + '\nhours',
      mDisplay:
        Math.floor((timestamp % 3600) / 60)
          .toString()
          .padStart(2, '0') + '\nminutes',
      sDisplay:
        Math.floor((timestamp % 3600) % 60)
          .toString()
          .padStart(2, '0') + '\nseconds'
    };
  }

  function confettify() {
    const jsConfetti = new confetti();
    let n = 0;
    const interval = setInterval(() => {
      if (n === 4) {
        clearInterval(interval);
      }
      jsConfetti.addConfetti({
        emojis: ['ðŸŒˆ', 'ðŸ’–', 'ðŸ¦„', 'âœ¨', 'ðŸ’«', 'ðŸŒ¸']
      });
      jsConfetti.addConfetti({
        confettiRadius: 6,
        confettiColors: [
          '#ff0a54',
          '#ff477e',
          '#ff7096',
          '#ff85a1',
          '#fbb1bd',
          '#f9bec7'
        ]
      });
      n++;
    }, 1000);
  }

  const hours = document.getElementById('hours') as HTMLHeadingElement;
  const minutes = document.getElementById('minutes') as HTMLHeadingElement;
  const seconds = document.getElementById('seconds') as HTMLHeadingElement;
  const wrapper = document.getElementById('wrapper') as HTMLDivElement;

  function setValues(hms: HMS) {
    hours.innerText = hms.hDisplay;
    minutes.innerText = hms.mDisplay;
    seconds.innerText = hms.sDisplay;
  }

  const arrivalTime = 1690789500000;
  setValues(secondsToHms((arrivalTime - Date.now()) / 1000));

  const interval = setInterval(() => {
    const currentTime = Date.now();

    if (currentTime >= arrivalTime) {
      wrapper.innerHTML = '<h1>ARRIVED</h1>';
      wrapper.classList.add('arrived');

      if (interval && document.hasFocus()) {
        confettify();
        clearInterval(interval);
      }
    } else {
      setValues(secondsToHms((arrivalTime - currentTime) / 1000));
    }
  }, 1000);
</script>
